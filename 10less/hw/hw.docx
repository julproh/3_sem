Контрольные вопросы

1 — Вариативные шаблоны.

Вариативные шаблоны удобно использовать, когда заранее неизвестно количество аргументов, подаваемых в него. Например, удобно использовать для подсчета суммы чисел (причем они могут быть разных типов, для которых выполняется данная операция). 

2 — Последовательная обработка аргументов из пакета аргументов.

Выполняем перегрузку для 1 аргумента, а затем выполняем рекурсивные алгоритм, отделяющий один элемент от общего пакета.

Также можно обрабатывать пакет аргументов с помощью выражение свертки.

3 — Количество параметров в пакете вариативного шаблона определяется с помощью sizeof...()

4 — Разновидности выражений свертки.

1.  Унарная левая - (... op args) = (....(((arg1 op arg2) op arg3) op arg4) ..... op argN)
2. Унарная правая - (args op ...) = arg1 op ( ....(arg(N-2) op (arg(N-1) op argN))...)
3. Бинарная левая - ( Args op ... op args) = (....((Args op arg1) op arg2) .... op argN)
4. Бинарная правая - (args op ... op Args) = (arg1 op (.... (argN op Args)....))

Все удобно применять для арифметических операций. 
(3) в особенности удобно для операторов ввода и вывода (<<, >>). 
Также, с помощью оператора ->*  можно совершать обход дерева.

Бинарные выражения отличаются тем, что помимо пачки параметров и оператора свертки, в выражении присутствует еще один операнд, который не является пачкой параметров.


5 Динамический и статистический полиморфизм.

Динамический полиморфизм осуществляется посредством наследования,
виртуальных функций. То есть создается некая иерархия классов,
позволяющая компактно хранить различные данные.

Статический полиморфизм основан на шаблонах базовых функций. То есть
для каждого класса, для каждого нового используемого типа просто
инстанцируется новый шаблон.

Статический полиморфизм позволяет увеличить скорость работы программы,
так как не приходится пробегаться по таблице виртуальных функций и по
указателям, а будут использоваться функции, созданные непосредственно для
этого объекта. Но код по сравнению с динамическим становиться существенно больше, так как
необходимо инстанцировать шаблон для каждого нового типа.




