Контрольные вопросы

1.  Задание значения для данных-членов структур.

Инициализация полей структуры может осуществляться присвоением значений при объявлении переменной / могут быть заданы по умолчанию / использованием функций ввода/вывода.

2. Списки инициализации в конструкторах структур.

Списки инициализации в конструкторах структур нужны, чтобы использовать инициализацию вместо присваивания более эффективно. Также некоторые типы данных, такие как константы и ссылки, требуют инициализации сразу.

3. Идиома RAII.

Идиома RAII (Resource Acquisition Is Initialization) заключается в том, что некоторый ресурс захватывается в конструкторе объекта, и освобождается в его деструкторе.

4. Использование битовых полей и объединений.

Битовые поля используются для более удобного доступа к отдельным битам данных. Они позволяют формировать объекты с длиной, не кратной байту. Благодаря этому экономится память. В объединении поля начинаются с одного адреса. Это значит, что размер объединения равен размеру самого большого его поля, но их значения перекрываются. Таким образом, их удобно использовать для упаковки / распаковки / шифровки данных.

5. Перечисления с областью видимости.

Значение перечислительным константам можно задать с помощью явной инициализации и по умолчанию. 
В перечислениях допускается использовать константные значения целочисленных, символьного, логического типа. Запрещается использовать значения типов с плавающей запятой. 
В перечислениях могут использоваться отрицательные значения перечислительных констант.
Константа, объявленная в перечислении, имеет область видимости в пределах скобок, в которых объявляется перечисление.
Переменные перечислений с областью видимости не могут неявно преобразовываться в целочисленные переменные и обратно.
